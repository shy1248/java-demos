<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="me.shy.demo.demomapper.StudentMapper">

    <!-- 多表联合查询实现方式：
         1.使用单表查询，然后在业务层进行拼装；
         2.
         2.使用<resultMap>标签

         resultMap标签用来手动管理列名映射，当不用这个时，mybatis使用的时auto-mapping机制，使用实体类的setter/getter方法；
         配置了resultMap标签后，查询标签里不再使用resultType属性，而是用resultMap属性指定需要映射的resultMap标签的ID。
    -->
    <resultMap id="student" type="me.shy.demo.demoomain.Student">
        <!-- 主键或联合主键都使用id标签映射，其它的使用result标签映射
             其中的column指定表的列，property指定实体类的属性
         -->
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="age" property="age"/>
        <!-- mybatis组装SQL,单个对象装配。property指定要装配的对象在当前中的属性名。
             select指定通过哪个SQL表签能查询到要装配的对象，column指定当前表的哪个字段作为查询参数。
         -->
        <association property="teacher" column="tid"
                select="me.shy.demo.demomapper.TeacherMapper.selectById"></association>
    </resultMap>
    <select id="selectAll" parameterType="student" resultMap="student">
        select * from student
    </select>

    <select id="selectByTid" parameterType="int" resultType="student">
        select * from student
        <where>
            tid=#{0}
        </where>
    </select>

    <!-- 多表联合查询的Auto-mapping实现，通过别名实现与实体类属性进行自动映射
         这种方式只适用于单个对象的装配，对于集合类型，是能使用collection标签
    -->
    <select id="selectByJoin" resultType="student">
        select s.id id, s.name name , s.age age, t.id `teacher.id`, t.name `teacher.name` from student s
        left join teacher t on s.tid = t.id
    </select>
</mapper>